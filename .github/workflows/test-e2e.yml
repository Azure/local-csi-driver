name: E2E Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: [main, release-**]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

permissions:
  contents: read
  actions: read
  id-token: write

env:
  MAJOR: "0"
  MINOR: "0"
  PATCH: "1"
  PYTHON_VERSION: "3.x"
  REGISTRY: "localcsidriver.azurecr.io"
  REPO_BASE: "acstor"

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.set-tag.outputs.TAG }}
      LATEST_TAG: ${{ steps.set-tag.outputs.LATEST_TAG }}
    steps:
      - name: Check out the code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set tag
        id: set-tag
        run: |
          # Get short commit SHA (7 characters)
          SHORT_SHA=$(git rev-parse --short HEAD)
          # Create tag in format MAJOR.MINOR.PATCH-REF
          TAG="${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}-${SHORT_SHA}"
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            LATEST_TAG="${{ env.MAJOR }}.${{ env.MINOR }}.${{ env.PATCH }}-latest"
          else
            LATEST_TAG=""
          fi
          echo "latest_tag=${LATEST_TAG}" >> "$GITHUB_OUTPUT"
  build-docker:
    needs: vars
    uses: ./.github/workflows/docker-build-template.yml
    with:
      registry: "localcsidriver.azurecr.io"
      repo_base: "acstor"
      version: ${{ needs.vars.outputs.TAG }}
      tags: |
        ${{ needs.vars.outputs.TAG }}
        ${{ needs.vars.outputs.LATEST_TAG }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  build-helm:
    needs: vars
    uses: ./.github/workflows/helm-build-template.yml
    with:
      registry: "localcsidriver.azurecr.io"
      repo_base: "acstor"
      tags: |
        ${{ needs.vars.outputs.TAG }}
        ${{ needs.vars.outputs.LATEST_TAG }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  e2e-test:
    needs: [build-docker, build-helm, vars]
    runs-on: ubuntu-latest
    environment: pull-request
    strategy:
      fail-fast: false
      matrix:
        test:
          - name: "Kind Integration Test"
            command: "test-e2e"
            cluster_type: "kind"

          - name: "Integration Test Azure Linux"
            command: "test-e2e-aks"
            cluster_type: "aks"
            aks_template: "nvme"

          - name: "Integration Azure Linux ARM"
            command: "test-e2e-aks"
            cluster_type: "aks"
            aks_template: "nvme-arm"

          - name: "Integration Test Ubuntu"
            command: "test-e2e-aks"
            cluster_type: "aks"
            aks_template: "nvme-ubuntu"

          - name: "External E2E Test"
            command: "test-external-e2e"
            cluster_type: "aks"
            aks_template: "nvme"

          - name: "Sanity Test"
            command: "test-sanity"
            cluster_type: "aks"
            aks_template: "nvme-single-node"

    name: ${{ matrix.test.name }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit
          disable-sudo: true
          disable-telemetry: true

      - name: Check out the code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Azure CLI Login
        if: ${{ success() && matrix.test.cluster_type == 'aks' }}
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup TestRunId
        run: |
          TEST_ID=$(echo "${{ matrix.test.name }}" | tr ' ' '-' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]//g')
          TEST_RUN_ID="${{ github.run_id }}-${TEST_ID}-${{ github.run_attempt }}"
          echo "TestRunId=${TEST_RUN_ID}" >> "$GITHUB_ENV"
          echo "Generated TestRunId: ${TEST_RUN_ID}"

      - name: Run ${{ matrix.test.name }}
        run: |
          python .github/workflows/scripts/run_tests.py \
            --command "make ${{ matrix.test.command }} REGISTRY=${{ env.REGISTRY }} REPO_BASE=${{ env.REPO_BASE }} TAG=${{ needs.vars.outputs.TAG }}" \
            --cluster-type ${{ matrix.test.cluster_type }} \
            ${{ matrix.test.aks_template && format('--aks-template {0}', matrix.test.aks_template) || '' }}

      - name: Cleanup cluster
        if: ${{ always() && matrix.test.cluster_type == 'aks' }}
        run: |
          if [[ -z "${{ env.TestRunId }}" || "${{ env.TestRunId }}" =~ ^[[:space:]]*$ ]]; then
            echo "Warning: TestRunId is empty or whitespace. Skipping cleanup."
            exit 0
          fi
          RG="lcd-${{ env.TestRunId }}"
          ./deploy/scripts/clean.sh --resource-group "$RG"

      - name: Sanitize artifacts
        run: |
          SECRETS=(
            "${{ secrets.AZURE_CLIENT_ID }}"
            "${{ secrets.AZURE_TENANT_ID }}"
            "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          )

          FILES=$(find ./support-bundles -type f) # recursively find all files
          FILES+=" ./JUnit.xml" # explicitly add JUnit.xml

          for secret_value in "${SECRETS[@]}"; do
            if [[ -n "$secret_value" ]]; then
              for file in $FILES; do
                if [[ -f "$file" ]]; then
                  sed -i "s/${secret_value}/<REDACTED>/g" "$file" || true
                fi
              done
            fi
          done

      - name: Upload Go test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-artifacts-${{ env.TestRunId }}
          path: |
            ./support-bundles
            ./JUnit.xml

      - name: Publish Test Results
        uses: dorny/test-reporter@890a17cecf52a379fc869ab770a71657660be727 # v2.1.0
        if: always()
        with:
          name: ${{ matrix.test.name }} Results
          path: ./JUnit.xml
          reporter: java-junit
          fail-on-error: true
          fail-on-empty: true
