name: Helm Build Template

on:
  workflow_call:
    inputs:
      registry:
        description: 'Container registry URL'
        required: true
        type: string
      repo_base:
        description: 'Repository base path'
        required: true
        type: string
      tags:
        description: 'Helm chart tags (YAML array)'
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  build-helm:
    runs-on: ubuntu-latest
    environment: pull-request
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Check out the code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Azure CLI Login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR login
        run: az acr login -n ${{ inputs.registry }}

      - name: Build and push Helm chart
        run: |
          # Login to Helm registry
          make helm-login REGISTRY=${{ inputs.registry }}

          # Build chart for each tag
          while IFS= read -r tag; do
            if [[ -z "${tag}" ]]; then
              continue
            fi
            echo "Building and pushing Helm chart for tag: ${tag}"
            make helm-build REGISTRY=${{ inputs.registry }} REPO_BASE=${{ inputs.repo_base }} TAG="${tag}"
            make helm-push REGISTRY=${{ inputs.registry }} REPO_BASE=${{ inputs.repo_base }} TAG="${tag}"
            echo "âœ“ Completed Helm chart: ${tag}"
          done <<< "${{ inputs.tags }}"

          echo "Helm charts built and pushed successfully"
