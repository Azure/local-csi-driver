name: Docker Build Template

on:
  workflow_call:
    inputs:
      registry:
        description: 'Container registry URL'
        required: true
        type: string
      repo_base:
        description: 'Repository base path'
        required: true
        type: string
      version:
        description: 'Version tag for the image'
        required: true
        type: string
      tags:
        description: 'Image tags (YAML array)'
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

permissions:
  contents: read
  id-token: write


jobs:
  build-docker:
    strategy:
      matrix:
        image:
          - name: local-csi-driver
            dockerfile: Dockerfile
        arch:
          - runs-on: ubuntu-latest
            platforms: linux/amd64
            tag-suffix: amd64
          - runs-on: ubuntu-24.04-arm
            platforms: linux/arm64
            tag-suffix: arm64
    runs-on: ${{ matrix.arch.runs-on }}
    environment: pull-request
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Check out the code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Azure CLI Login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR login
        run: az acr login -n ${{ inputs.registry }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Set build date
        id: build-date
        run: echo "date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> "$GITHUB_OUTPUT"

      - name: Set image tags
        id: set-tags
        run: |
          set -eou pipefail
          tags=()
          while IFS= read -r tag; do
            if [[ -z "$tag" ]]; then
              continue
            fi
            tags+=("${{ inputs.registry }}/${{ inputs.repo_base }}/${{ matrix.image.name }}:${tag}-${{ matrix.arch.tag-suffix }}")
          done <<< "${{ inputs.tags }}"

          echo "tags=$(IFS=,; echo "${tags[*]}")" >> "$GITHUB_OUTPUT"

      - name: Docker build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ${{ matrix.image.dockerfile }}
          push: true
          tags: ${{ steps.set-tags.outputs.tags }}
          platforms: ${{ matrix.arch.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_ID=${{ github.run_id }}
            VERSION=${{ inputs.version }}
            GIT_COMMIT=${{ github.sha }}
            BUILD_DATE=${{ steps.build-date.outputs.date }}

  push-manifest:
    needs: build-docker
    runs-on: ubuntu-latest
    environment: pull-request
    strategy:
      matrix:
        image:
          - name: local-csi-driver
            dockerfile: Dockerfile
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Azure CLI Login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR login
        run: az acr login -n ${{ inputs.registry }}

      - name: Create and push manifest
        run: |
          set -eou pipefail
          tags=()
          while IFS= read -r tag; do
            if [[ -z "$tag" ]]; then
              continue
            fi
            tags+=("${{ inputs.registry }}/${{ inputs.repo_base }}/${{ matrix.image.name }}:${tag}")
          done <<< "${{ inputs.tags }}"

          for tag in "${tags[@]}"; do
            docker buildx imagetools create \
              -t "$tag" \
              "$tag-amd64" \
              "$tag-arm64"
          done
