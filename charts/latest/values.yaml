# Name used for creating resources.
name: csi-local

image:
  baseRepo: mcr.microsoft.com
  driver:
    repository: localcsidriver.azurecr.io/acstor/local-csi-driver
    # When the tag is unset (recommended), the chart version is used as the tag.
    tag:
    pullPolicy: IfNotPresent
  csiProvisioner:
    repository: /oss/v2/kubernetes-csi/csi-provisioner
    tag: v5.2.0
    pullPolicy: IfNotPresent
  csiResizer:
    repository: /oss/v2/kubernetes-csi/csi-resizer
    tag: v1.13.2
    pullPolicy: IfNotPresent
  nodeDriverRegistrar:
    repository: /oss/v2/kubernetes-csi/csi-node-driver-registrar
    tag: v2.13.0
    pullPolicy: IfNotPresent

kubernetesClusterDomain: cluster.local

# DaemonSet configuration.
daemonset:
  nodeSelector: {}
  serviceAccount:
    annotations: {}

# Webhook configuration.
webhook:
  ephemeral:
    # Enables the ephemeral PVC validation webhook, which enforces that PVCs are
    # ephemeral, or that the `acstor.azure.com/accept-ephemeral-storage=true`
    # annotation is present.
    enabled: true
  hyperconverged:
    # Enables the hyperconverged pod mutation webhook. Required to allow pods to
    # recover (with empty volumes) after cluster restart if node names change.
    enabled: true
  service:
    ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
    type: ClusterIP

# Resource configuration.
resources:
  driver:
    limits:
      memory: 600Mi
    requests:
      cpu: 10m
      memory: 60Mi
  csiProvisioner:
    limits:
      memory: 100Mi
    requests:
      cpu: 10m
      memory: 20Mi
  csiResizer:
    limits:
      memory: 500Mi
    requests:
      cpu: 10m
      memory: 20Mi
  nodeDriverRegistrar:
    limits:
      memory: 100Mi
    requests:
      cpu: 10m
      memory: 20Mi

# Observability and health configuration.
observability:
  driver:
    log:
      level: 2
    metrics:
      port: 8080
    health:
      port: 8081
    trace:
      endpoint: ""
      sampleRate: "1000000"
  csiProvisioner:
    log:
      level: 2
    http:
      port: 8090
  csiResizer:
    log:
      level: 2
    http:
      port: 8091
  nodeDriverRegistrar:
    log:
      level: 2
    http:
      port: 8092

# Scalability tuning.
scalability:
  driver:
    workerThreads: 100
    kubeApi:
      qps: 100
      burst: 200
  csiProvisioner:
    workerThreads: 100
    kubeApi:
      qps: 100
      burst: 200
